package utils1;

import org.openqa.selenium.WebDriver;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;
import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;

public class ExtentITestNGListeners implements ITestListener {

    ExtentReports extent = ExtentManager.getInstance();
    ThreadLocal<ExtentTest> parentTest = new ThreadLocal<ExtentTest>();

    public void onTestStart(ITestResult result) {
        ExtentTest extentTest = extent.createTest(result.getMethod().getMethodName());
        parentTest.set(extentTest);
    }

    @Override
    public void onTestSuccess(ITestResult result) {
        parentTest.get().log(Status.PASS, result.getName() + " Got Successfully Pass!");

        attachScreenshot(result, "PASS");
    }

    @Override
    public void onTestFailure(ITestResult result) {
        parentTest.get().fail("Test Failed " + result.getThrowable().getMessage());
        parentTest.get().log(Status.FAIL, result.getName() + " Test Fail");

        attachScreenshot(result, "FAIL");
    }

    @Override
    public void onTestSkipped(ITestResult result) {
        parentTest.get().skip("Test Skipped " + result.getThrowable().getMessage());
    }

    @Override
    public void onFinish(ITestContext context) {
        extent.flush();
    }

    /** utility to capture and attach screenshot */
    private void attachScreenshot(ITestResult result, String status) {
        Object currentClass = result.getInstance();
        try {
            WebDriver driver = (WebDriver) result.getTestClass()
                    .getRealClass()
                    .getDeclaredField("driver")
                    .get(currentClass);

            String screenshotPath = ScreenshotUtil.captureScreenshot(
                    driver, result.getMethod().getMethodName() + "_" + status);

            parentTest.get().addScreenCaptureFromPath(screenshotPath.replace("\\", "/"));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
